{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","validImgUrl","validImdbUrl","disabled","urlError","handleInputChange","event","validUrl","RegExp","target","name","value","setState","test","isValidDate","reset","setBorder","isValid","border","handleSubmit","preventDefault","props","onAdd","this","onSubmit","htmlFor","type","placeholder","onChange","required","style","Component","App","moviesFromServer","addMovie","prev","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf4328e8.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\ntype State = {\n  title: string,\n  description: string,\n  imgUrl: string,\n  validImgUrl: boolean,\n  imdbUrl:string,\n  validImdbUrl: boolean,\n  urlError: string,\n  imdbId: string,\n  disabled: boolean,\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    validImgUrl: true,\n    imdbUrl: '',\n    validImdbUrl: true,\n    imdbId: '',\n    disabled: false,\n    urlError: '',\n  };\n\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    // eslint-disable-next-line max-len\n    const validUrl = new RegExp(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/);\n\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'title':\n        this.setState({\n          title: value,\n        });\n        break;\n\n      case 'description':\n        this.setState({\n          description: value,\n        });\n        break;\n\n      case 'imgUrl':\n        this.setState({\n          imgUrl: value,\n          validImgUrl: validUrl.test(value),\n        });\n        break;\n\n      case 'imdbUrl':\n        this.setState({\n          imdbUrl: value,\n          validImdbUrl: validUrl.test(value),\n        });\n        break;\n\n      case 'imdbId':\n        this.setState({\n          imdbId: value,\n        });\n        break;\n\n      default:\n    }\n\n    this.setState({ disabled: false });\n  };\n\n  isValidDate = () => {\n    const { validImdbUrl, validImgUrl } = this.state;\n\n    if (!validImdbUrl || !validImgUrl) {\n      this.setState({\n        urlError: 'Invalid input!',\n        disabled: true,\n      });\n\n      return false;\n    }\n\n    return true;\n  };\n\n  reset = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      disabled: false,\n    });\n  };\n\n  setBorder = (isValid: boolean) => {\n    return isValid ? { border: '' } : { border: '2px solid #DC143C' };\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (this.isValidDate()) {\n      const movie = {\n        title: this.state.title,\n        description: this.state.description,\n        imgUrl: this.state.imgUrl,\n        imdbUrl: this.state.imdbUrl,\n        imdbId: this.state.imdbId,\n      };\n\n      this.props.onAdd(movie);\n      this.reset();\n    }\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      validImgUrl,\n      imdbUrl,\n      validImdbUrl,\n      imdbId,\n      disabled,\n      urlError,\n    } = this.state;\n\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n        className=\"NewMovie\"\n      >\n        <label htmlFor=\"title\">\n          <input\n            type=\"text\"\n            name=\"title\"\n            className=\"NewMovie__input\"\n            value={title}\n            placeholder=\"Title\"\n            onChange={this.handleInputChange}\n            required\n          />\n        </label>\n\n        <label htmlFor=\"description\">\n          <input\n            type=\"text\"\n            name=\"description\"\n            className=\"NewMovie__input\"\n            value={description}\n            placeholder=\"Description\"\n            onChange={this.handleInputChange}\n          />\n        </label>\n\n        <label htmlFor=\"imgUrl\">\n          <input\n            type=\"text\"\n            name=\"imgUrl\"\n            className=\"NewMovie__input\"\n            value={imgUrl}\n            placeholder=\"Image link\"\n            onChange={this.handleInputChange}\n            style={this.setBorder(validImgUrl)}\n            required\n          />\n          {!validImgUrl\n              && (\n                <p>{urlError}</p>\n              )}\n        </label>\n\n        <label htmlFor=\"imdbUrl\">\n          <input\n            type=\"text\"\n            name=\"imdbUrl\"\n            className=\"NewMovie__input\"\n            value={imdbUrl}\n            placeholder=\"IMDB link\"\n            onChange={this.handleInputChange}\n            style={this.setBorder(validImdbUrl)}\n            required\n          />\n          {!validImdbUrl\n              && (\n                <p>{urlError}</p>\n              )}\n        </label>\n\n        <label htmlFor=\"imdbId\">\n          <input\n            type=\"text\"\n            name=\"imdbId\"\n            className=\"NewMovie__input\"\n            value={imdbId}\n            placeholder=\"IMDB Id\"\n            onChange={this.handleInputChange}\n            required\n          />\n        </label>\n\n        <button\n          type=\"submit\"\n          disabled={disabled}\n          className=\"NewMovie__button\"\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState((prev) => ({\n      movies: [...prev.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <h2 className=\"sidebar-title\">\n            Add a movie\n          </h2>\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}